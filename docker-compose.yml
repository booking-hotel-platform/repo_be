services:
  postgres:
    image: postgres:16.8-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: hotel_booking_data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12341234
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spring-network
    restart: always

  app:
    build: .
    container_name: spring-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL:
      SPRING_DATASOURCE_USERNAME:
      SPRING_DATASOURCE_PASSWORD:
      SPRING_MAIL_USERNAME:
      SPRING_MAIL_PASSWORD:
      CLOUDINARY_CLOUD_NAME:
      CLOUDINARY_API_KEY:
      CLOUDINARY_API_SECRET:
      STRIPE_API_KEY:
      STRIPE_WEBHOOK_SECRET:
      JWT_SECRET:
      FRONTEND_URL:
    depends_on:
      - postgres
    networks:
      - spring-network
    restart: always

  client:
    build:
      context: ../repo-fe  # Đường dẫn tới thư mục client trong front-end
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:8080/api
    container_name: react-app
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
    ports:
      - "3000:80"
    networks:
      - spring-network
    depends_on:
      - app

volumes:
  postgres_data:
  pgadmin_data:

networks:
  spring-network:
    driver: bridge
